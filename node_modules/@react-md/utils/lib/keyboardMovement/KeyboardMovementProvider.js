"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeyboardMovementProvider = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("react");
var movementContext_1 = require("./movementContext");
var utils_1 = require("./utils");
/**
 * @example
 * Main Usage
 * ```tsx
 * function Example() {
 *   return (
 *     <KeyboardMovementProvider>
 *       <CustomKeyboardFocusWidget />
 *     </KeyboardMovementProvider>
 *   );
 * }
 *
 * function CustomKeyboardFocusWidget() {
 *   const { onKeyDown } = useKeyboardFocus();
 *   return (
 *     <div onKeyDown={onKeyDown}>
 *       <FocusableChild />
 *       <FocusableChild />
 *       <FocusableChild />
 *       <FocusableChild />
 *     </div>
 *   );
 * }
 *
 * function FocusableChild() {
 *   const refCallback = useKeyboardFocusableElement()
 *
 *   return <div role="menuitem" tabIndex={-1} ref={refCallback}>Content</div>;
 * }
 * ```
 *
 * @remarks \@since 5.0.0
 */
function KeyboardMovementProvider(_a) {
    var children = _a.children, _b = _a.loopable, loopable = _b === void 0 ? false : _b, _c = _a.searchable, searchable = _c === void 0 ? false : _c, _d = _a.includeDisabled, includeDisabled = _d === void 0 ? false : _d, _e = _a.incrementKeys, incrementKeys = _e === void 0 ? movementContext_1.DEFAULT_KEYBOARD_MOVEMENT.incrementKeys : _e, _f = _a.decrementKeys, decrementKeys = _f === void 0 ? movementContext_1.DEFAULT_KEYBOARD_MOVEMENT.decrementKeys : _f, _g = _a.jumpToFirstKeys, jumpToFirstKeys = _g === void 0 ? movementContext_1.DEFAULT_KEYBOARD_MOVEMENT.jumpToFirstKeys : _g, _h = _a.jumpToLastKeys, jumpToLastKeys = _h === void 0 ? movementContext_1.DEFAULT_KEYBOARD_MOVEMENT.jumpToLastKeys : _h;
    var watching = (0, react_1.useRef)([]);
    var configuration = {
        incrementKeys: incrementKeys,
        decrementKeys: decrementKeys,
        jumpToFirstKeys: jumpToFirstKeys,
        jumpToLastKeys: jumpToLastKeys,
    };
    var config = (0, react_1.useRef)(configuration);
    config.current = configuration;
    var value = (0, react_1.useMemo)(function () { return ({
        attach: function (element) {
            watching.current.push({
                element: element,
                content: (0, utils_1.getSearchText)(element, searchable),
            });
        },
        detach: function (element) {
            watching.current = watching.current.filter(function (cache) { return cache.element !== element; });
        },
        watching: watching,
        config: config,
        loopable: loopable,
        searchable: searchable,
        includeDisabled: includeDisabled,
    }); }, [includeDisabled, loopable, searchable]);
    return ((0, jsx_runtime_1.jsx)(movementContext_1.KeyboardMovementContextProvider, __assign({ value: value }, { children: children }), void 0));
}
exports.KeyboardMovementProvider = KeyboardMovementProvider;
//# sourceMappingURL=KeyboardMovementProvider.js.map