"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tab = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("react");
var classnames_1 = __importDefault(require("classnames"));
var icon_1 = require("@react-md/icon");
var states_1 = require("@react-md/states");
var utils_1 = require("@react-md/utils");
var useTabIndicatorStyle_1 = require("./useTabIndicatorStyle");
var block = (0, utils_1.bem)("rmd-tab");
/**
 * The `Tab` is a low-level component that just renders an accessible tab widget
 * along with some general styles and an optional icon.
 */
exports.Tab = (0, react_1.forwardRef)(function Tab(_a, propRef) {
    var propClassName = _a.className, contentStyle = _a.contentStyle, contentClassName = _a.contentClassName, _b = _a.disabled, disabled = _b === void 0 ? false : _b, icon = _a.icon, _c = _a.stacked, stacked = _c === void 0 ? false : _c, _d = _a.iconAfter, iconAfter = _d === void 0 ? false : _d, children = _a.children, active = _a.active, panelId = _a.panelId, disableRipple = _a.disableRipple, disableProgrammaticRipple = _a.disableProgrammaticRipple, rippleTimeout = _a.rippleTimeout, rippleClassNames = _a.rippleClassNames, rippleClassName = _a.rippleClassName, rippleContainerClassName = _a.rippleContainerClassName, enablePressedAndRipple = _a.enablePressedAndRipple, props = __rest(_a, ["className", "contentStyle", "contentClassName", "disabled", "icon", "stacked", "iconAfter", "children", "active", "panelId", "disableRipple", "disableProgrammaticRipple", "rippleTimeout", "rippleClassNames", "rippleClassName", "rippleContainerClassName", "enablePressedAndRipple"]);
    var _e = (0, states_1.useInteractionStates)({
        handlers: props,
        className: propClassName,
        disabled: disabled,
        disableRipple: disableRipple,
        disableProgrammaticRipple: disableProgrammaticRipple,
        rippleTimeout: rippleTimeout,
        rippleClassNames: rippleClassNames,
        rippleClassName: rippleClassName,
        rippleContainerClassName: rippleContainerClassName,
        enablePressedAndRipple: enablePressedAndRipple,
    }), ripples = _e.ripples, className = _e.className, handlers = _e.handlers;
    // TODO: Look into removing this resize observer. This is only required if
    // someone manually updates the width of the tab (dev utils) or if the width
    // was not changed due to the tabs container element resizing (iffy)
    var updateIndicatorStyles = (0, useTabIndicatorStyle_1.useUpdateIndicatorStyles)();
    var _f = __read((0, utils_1.useResizeObserver)(updateIndicatorStyles, {
        ref: propRef,
    }), 2), refHandler = _f[1];
    return ((0, jsx_runtime_1.jsxs)("button", __assign({}, props, handlers, { ref: active ? refHandler : propRef, "aria-selected": active, "aria-controls": panelId, type: "button", role: "tab", disabled: disabled, className: (0, classnames_1.default)(block({ active: active, stacked: icon && stacked }), className), tabIndex: active ? undefined : -1 }, { children: [(0, jsx_runtime_1.jsx)(icon_1.TextIconSpacing, __assign({ icon: icon, stacked: stacked, iconAfter: iconAfter }, { children: (0, jsx_runtime_1.jsx)("span", __assign({ style: contentStyle, className: (0, classnames_1.default)(block("content"), contentClassName) }, { children: children }), void 0) }), void 0), ripples] }), void 0));
});
//# sourceMappingURL=Tab.js.map